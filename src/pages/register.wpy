<template>
  <view class="page">
    <view class="page__bd">
      <view class="weui-cells__title">账户信息</view>
      <view class="weui-cells weui-cells_after-title">
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="label-front">邮箱</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" placeholder="请输入您的邮箱" type="email" bindinput="registerEmail"/>
          </view>
          <view class="weui-cell__ft">
            <picker @change="bindMailTypeChange" value="{{MailTypeIndex}}" range="{{MailTypes}}">
              <view class="email-label weui-select-style">{{MailTypes[MailTypeIndex]}}</view>
            </picker>
            <!-- <view class="email-label">@sysu.mail2.edu.cn</view> -->
          </view>
        </view>
        <view class="weui-cell weui-cell_input weui-cell_vcode">
            <view class="weui-cell__hd">
              <view class="label-front">验证码</view>
            </view>
            <view class="weui-cell__bd">
              <input class="weui-input" bindinput="registerVcode" placeholder="请输入验证码" />
            </view>
            <view class="weui-cell__ft">
              <button class="weui-vcode-btn" bindtap="getvcode" disabled="{{getvcodeBtnDisabled}}">{{CountTime}}</button>
            </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="label-front">密码</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" password="true" placeholder="请设置您的密码" bindinput="registerPassword"/>
          </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="label-front">确认密码</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" password="true" placeholder="请再次输入以确认您的密码" bindinput="registerConfirmPassword"/>
          </view>
          <view class="weui-warnning" wx:if="{{!isCorresponding}}">两次密码不一致</view>
        </view>

      </view>
      <view class="weui-cells__title">个人信息</view>
      <view class="weui-cells weui-cells_after-title">
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="label-front">姓名</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" bindinput="bindName"/>
          </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="label-front">学号</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" bindinput="bindNetID"/>
          </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="label-front">学院</view>
          </view>
          <view class="weui-cell__bd">
            <picker @change="bindCollageChange" value="{{CollageIndex}}" range="{{Collages}}">
              <view class="collage-label weui-select-style">{{Collages[CollageIndex]}}</view>
            </picker>
          </view>
        </view>
        <view class="weui-cell weui-cell_select">
          <view class="weui-cell__hd weui-cell__hd_in-select-after">
            <view class="label-front">年级</view>
          </view>
          <view class="weui-cell__bd">
            <picker @change="bindGradeChange" value="{{GradeIndex}}" range="{{Grades}}">
              <view class="weui-select weui-select_in-select-after">{{Grades[GradeIndex]}}</view>
            </picker>
          </view>
          <view class="weui-cell__hd weui-cell__hd_in-select-after">
            <view class="label-front">性别</view>
          </view>
          <view class="weui-cell__bd">
            <picker @change="bindSexChange" value="{{SexIndex}}" range="{{SexList}}">
              <view class="weui-select weui-select_in-select-after">{{SexList[SexIndex]}}</view>
            </picker>
          </view>
        </view>
      </view>
        <view class="weui-btn-area">
          <button class="weui-btn" type="primary" @tap="registerBtnClick">注册</button>
        </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import 'wepy-async-function'

  import {USER_LOGIN_INFO} from '../utils/constant'
  import { register, registerVcode } from '../api'
  export default class Register extends wepy.page {
    config = {
      navigationBarTitleText: '注册'
    };
    data = {
      isCorresponding: true,                                  // 两次输入是否一直
      register_email: null,                                   // 注册时填写的email
      register_password: null,                                // 注册时填写的密码
      register_confirm_password: null,                        // 注册时再次填写的密码
      vcode: null,                                            // 用户输入的验证码
      name: null,                                             // 用户姓名
      student_id: null,                                       // 用户学号
      CollageIndex: 0,                                        // 用户学院
      Collages: ['中国语言文学系', '历史学系', '哲学系', '外国语学院', '管理学院（创业学院）', '岭南学院', '社会学与人类学学院', '马克思主义学院', '法学院', '政治与公共事务管理学院', '资讯管理学院', '传播与设计学院', '心理学系', '艺术学院', '博雅学院', '数学学院', '物理学院', '化学学院', '生命科学学院', '地理科学与规划学院', '环境科学与工程学院', '材料科学与工程学院', '逸仙学院', '数据科学与计算机学院', '国家保密学院', '网络安全学院', '电子与信息工程学院', '系统科学与工程学院', '中山医学院', '光华口腔医学院', '公共卫生学院', '护理学院', '药学院', '体育部', '中国语言文学系（珠海）', '历史系（珠海）', '哲学系（珠海）', '旅游学院', '国际关系学院', '国际金融学院', '国际翻译学院', '数学学院（珠海）', '大气科学学院', '地球科学与工程学院', '海洋科学学院', '海洋工程与技术学院', '物理与天文学院', '中法核工程与技术学院', '化学工程与技术学院', '土木工程学院', '微电子科学与技术学院', '测绘科学与技术学院', '医学院', '公共卫生学院（深圳）', '药学院（深圳）', '生物医学工程学院', '材料学院', '电子与通信工程学院', '航空航天学院', '智能工程学院', '农学院', '生态学院'],
      GradeIndex: 0,                                          // 年级数组的下标
      Grades: [2019, 2018, 2017, 2016, 2015, 2014, 2013, 2012],  // 年级，如何更好的表示？待解决！！！
      SexIndex: 0,                                            // 性别数组的下标
      SexList: ['男', '女'],                                  // 性别
      MailTypeIndex: 0,                                       // 邮箱类型下标
      MailTypes: ['@mail2.sysu.edu.cn', '@mail.sysu.edu.cn', '@qq.com'], // 邮箱类型
      CountTime: '获取验证码',                                 // 获取验证码按钮显示变量
      second: 6,                                              // 获取验证码等待时间 ，单位 s（秒）,测试6秒，正式为60秒
      getvcodeBtnDisabled: false                              // 获取验证码按钮是否可点击
    }
    // 邮箱
    registerEmail(e) {
      this.data.register_email = e.detail.value
    }
    // 密码
    registerPassword(e) {
      this.data.register_password = e.detail.value
    }
    // 获取再次填写的密码
    // 成功更新两次相同和不相同时isCorresponding变量
    // isCorresponding变量改变未实现页面中提示的出现和隐藏，待解决！！！
    async registerConfirmPassword(e) {
      this.data.register_confirm_password = e.detail.value
      let password = await this.data.register_password
      console.log(e.detail.value, password)
      if (password === e.detail.value) {
        console.log(this.data.register_password)
        this.setData({isCorresponding: true})
        // this.data.isCorresponding = true
      } else {
        this.setData({isCorresponding: false})
        // this.data.isCorresponding = false
      }
      console.log(this.data.isCorresponding)
    }
    // 验证码
    registerVcode(e) {
      this.data.vcode = e.detail.value
    }
    // 姓名
    bindName(e) {
      this.data.name = e.detail.value
    }
    // 学号
    bindNetID(e) {
      this.data.student_id = e.detail.value
    }
    // 学院
    bindCollageChange(e) {
      this.CollageIndex = e.detail.value
    }
    // 年级
    bindGradeChange(e) {
      this.GradeIndex = e.detail.value
    }
    // 性别
    bindSexChange(e) {
      this.SexIndex = e.detail.value
    }
    bindMailTypeChange(e) {
      this.MailTypeIndex = e.detail.value
    }
    navigationToHome() {
      wepy.switchTab({url: 'home'})
    }
    // 倒计时
    countdown(secondNum) {
      if (secondNum === 0) {
        setTimeout(() => {
          console.log('倒计时结束')
          this.setData({
            CountTime: '重新发送验证码',
            getvcodeBtnDisabled: false
          })
        }, 1000)
        this.CountTime = '重新发送验证码'
      } else {
        this.setData({
          getvcodeBtnDisabled: true
        })
        setTimeout(() => {
          secondNum = secondNum - 1
          console.log(secondNum)
          this.setData({
            CountTime: secondNum + '秒'
          })
          this.countdown(secondNum)
        }, 1000)
      }
    }
    // 获取验证码按钮事件
    async getvcode() {
      console.log('正在获取验证码....')
      // 后台获取对应验证码，并实时验证
      if (this.data.register_email != null) {
        console.log(this.data.register_email + this.data.MailTypes[this.data.MailTypeIndex])
        let result = await registerVcode(this.data.register_email + this.data.MailTypes[this.data.MailTypeIndex])
        console.log(result)
        if (result != null) {
          // 成功获得验证码
          if (result.error === 0) {
            console.log('成功获得验证码')
            this.countdown(this.second)
          }
        } else {
          console.log(result.error_message)
        }
      } else {
        console.log('请输入邮箱')
      }
    }
    // 注册按钮，toast提示
    async registerBtnClick() {
      if (this.data.register_password === this.data.register_confirm_password) {
        var email = this.data.register_email + this.data.MailTypes[this.data.MailTypeIndex]
        var vcode = this.data.vcode
        var password = this.data.register_password
        var name = this.data.name
        var studentId = this.data.student_id
        var collage = this.data.Collages[this.data.CollageIndex]
        var grade = this.data.Grades[this.data.GradeIndex]
        var sex = this.data.SexList[this.data.SexIndex]
        console.log(email, vcode, password, name, studentId, collage, grade, sex)
        // register网络连接
        var result = await register(email, vcode, password, name, studentId, collage, grade, sex)
        // 确保有返回信息
        console.log(result)
        if (result != null) {
          // 注册成功
          console.log(result.error)
          if (result.error === 0) {
            // TODO
            // open_id 请求数据 openid = result.data.openid
            console.log('注册成功')
            this.$parent.globalData.userLoginInfo = {
              userEmail: this.data.register_email,
              userPassword: this.data.register_password,
              loginType: 'student'
            }
            await wepy.setStorageSync(USER_LOGIN_INFO, this.$parent.globalData.userLoginInfo)
            await wx.showToast({
              title: '注册成功！',
              icon: 'success',
              duration: 2000
            })
            setTimeout(this.navigationToHome, 2000)
            this.$parent.globalData.userLoginInfo = {
              userEmail: this.data.register_email + this.data.MailTypes[this.data.MailTypeIndex],
              userPassword: this.data.register_password,
              loginType: 'student'
            }
          } else {
            // 注册失败，反馈信息
            console.log(result.error_message)
          }
        }
      } else {
        console.log('两次输入密码不一致')
        wx.showToast({
          title: '两次密码不一致',
          icon: 'none',
          duration: 2000
        })
      }
    }
    onLoad() {
      console.log('注册页面')
    }
  }
</script>

<style lang="less">
.email-label{
  width: 105px;
  font-size: 65%;
  word-wrap: break-word;
  word-break: break-all
}
.collage-label{
  font-size: 90%;
  word-wrap: break-word;
  word-break: break-all
}
.label-front{
  display: block;
  padding-right: 0.5em;
  font-size: 90%;
}
.weui-input{
  align-self: center;
  height: 2em;
  min-height: 1.5em;
  line-height: 1.5em;
  font-size: 85%;
}
.weui-select-style{
  position: relative;
  padding-left: 15px;
  padding-right: 30px;
  height: 2.58823529em;
  min-height: 2.58823529em;
  line-height: 2.58823529em;
}
.weui-select-style:before {
    content: " ";
    display: inline-block;
    height: 6px;
    width: 6px;
    border-width: 2px 2px 0 0;
    border-color: #c8c8cd;
    border-style: solid;
    -webkit-transform: matrix(.71, .71, -.71, .71, 0, 0);
    transform: matrix(.71, .71, -.71, .71, 0, 0);
    position: relative;
    top: -2px;
    position: absolute;
    top: 50%;
    right: 15px;
    margin-top: -4px
}
.weui-cell_input {
  padding-top: 5px;
  padding-bottom: 5px;
}
.weui-cell {
  padding: 10px 10px;
}
.weui-warnning{
  font-size: 10px;
  color: red;
}
.weui-vcode-btn {
  font-size: 14px;
}
</style>
