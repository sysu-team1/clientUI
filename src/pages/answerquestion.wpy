<template>
<view>
<view id="title">
  <view class='titleContent'>问卷</view>
  <image class='titlePriceIcon' src='{{priceIcon}}' mode='widthFix'/>
  <view class='priceContent'>25</view>
  <view class='priceUnit'>元</view>
</view>

<view id = 'body' wx:for="{{questionnaireArray}}" wx:key="id" wx:for-index='fatherIndex'>
  <block wx:if="{{item.type === 'SCQ'}}">
    <view class = 'SCQ' data-id='{{fatherIndex}}'>
      <view class='SCQTitle'>
        <view class='SCQQ'>Q</view>
        <view class='SCQindex'>{{fatherIndex+1}}</view>
        <view class='SCQquto'>:</view>
        <text class='SCQDiscription' data-id='{{fatherIndex}}'>{{item.content.description}}</text>
      </view>
      <radio-group class="SCQOption" bindchange="radioChangeSCQ">
        <label class="SCQText" wx:for="{{item.content.options}}" wx:key="SCQID" data-id='{{fatherIndex}}' bindtouchstart='getTempFatherIndex'>
          <radio value="{{item.name}}" checked="{{item.isSelected}}"/>{{item.name}}
        </label>
      </radio-group>
    </view>
  </block>
  <block wx:if="{{item.type === 'MCQ'}}">
    <view class = 'MCQ' data-id='{{fatherIndex}}'>
      <view class='MCQTitle'>
        <view class='MCQQ'>Q</view>
        <view class='MCQindex'>{{fatherIndex+1}}</view>
        <view class='MCQquto'>:</view>
        <text class='MCQDiscription' data-id='{{fatherIndex}}'>{{item.content.description}}</text>
      </view>

      <checkbox-group class="MCQOption" bindchange="checkboxChangeMCQ">
        <label class="MCQText" wx:for="{{item.content.options}}" wx:key="MCQID" data-id='{{fatherIndex}}' bindtouchstart='getTempFatherIndex'>
          <checkbox value="{{item.name}}" checked="{{item.isSelected}}" data-id='{{index}}'/>{{item.name}}
        </label>
      </checkbox-group>
    </view>
  </block>
  <block wx:if="{{item.type === 'SAQ'}}">
    <view class = 'SAQ' data-id='{{fatherIndex}}'>
      <view class='SAQTitle'>
        <view class='SAQQ'>Q</view>
        <view class='SAQindex'>{{fatherIndex+1}}</view>
        <view class='SAQquto'>:</view>
        <text class='SAQDiscription' data-id='{{fatherIndex}}'>{{item.content.description}}</text>
      </view>
      <textarea auto-height='true' class = "SAQAnswer" value='{{item.content.answer}}' bindblur='bindblurAnswerOfSAQ' data-id='{{fatherIndex}}'></textarea>
    </view>
  </block>
</view>

<button class="weui-btn" type="primary" bindtap='complete'>完成</button>
</view>

</template>

<script>
// pages/yaoxh6/item/item.js
import wepy from 'wepy'
export default class Question extends wepy.page {
  /**
   * 页面的初始数据
   */
  data= {
    priceIcon: '../../../images/price.png',
    currentFatherIndex: 0,
    questionnaireArray: [
      {
        'type': 'SCQ',
        'content': {
          'description': 'Which fruit do you like best?',
          'options':
          [
              { 'id': 1, 'name': 'Lua', 'isSelected': false },
              { 'id': 2, 'name': 'Java', 'isSelected': false },
              { 'id': 3, 'name': 'C++', 'isSelected': false }
          ]
        }
      },
      {
        'type': 'MCQ',
        'content': {
          'description': 'Which fruit do you like?',
          'options':
          [
              { 'id': 1, 'name': 'OK', 'isSelected': false },
              { 'id': 2, 'name': 'Java', 'isSelected': false },
              { 'id': 3, 'name': 'C++', 'isSelected': false }
          ]
        }
      },
      {
        'type': 'SAQ',
        'content': {
          'description': 'What is your name?',
          'answer': 'i dont know'
        }
      }
    ]
  }

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad () {
  }

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady () {

  }

  /**
   * 生命周期函数--监听页面显示
   */
  onShow () {

  }

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide () {

  }

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload () {

  }

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh () {

  }

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom () {

  }

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage () {

  }
  // fun : function(){
  //   var q = {
  //     test: this.data.test,
  //     test2: this.data.test2
  //   }
  //   wx.cloud.callFunction({
  //     name: 'release_questionnaire',
  //     data: {
  //       content: JSON.stringify(q)
  //     },
  //     success: res => {
  //       // test = JSON.stringify(res)
  //       // this.setData({
  //       //   test : JSON.stringify(res.result.results.data[0].description)
  //       // })
  //       console.log('success')
  //     }
  //   })
  // },

  // fun2 : function(){
  //   wx.cloud.callFunction({
  //     name: 'get_all_questionnaire',
  //     success: res => {
  //       console.log(res)
  //       var last = res.result.results.data[8].content
  //       this.setData({
  //         test: JSON.parse(last).test
  //       })
  //       console.log('success')
  //     }
  //   })
  // }
  goBack () {
    console.log('to task page')
    wx.switchTab({
      url: '../task/task'
    })
  }

  getTempFatherIndex (input) {
    var tempFatherIndex = input.currentTarget.dataset.id
    // console.log('currentFatherIndex: ' + tempFatherIndex);
    this.setData({
      currentFatherIndex: tempFatherIndex
    })
  }

  radioChangeSCQ (input) {
    var tempFatherIndex = this.data.currentFatherIndex;
    var tempArray = this.data.questionnaireArray;
    for (var i in tempArray[tempFatherIndex].content.options){
      if (tempArray[tempFatherIndex].content.options[i].name == input.detail.value){
        tempArray[tempFatherIndex].content.options[i].isSelected = true;
      }
      else{
        tempArray[tempFatherIndex].content.options[i].isSelected = false;
      }
    }
    this.setData({
      questionnaireArray: tempArray,
    });
  }

  checkboxChangeMCQ (input) {
    // console.log(input.detail.value);
    var flag = false;
    var tempFatherIndex = this.data.currentFatherIndex;
    var tempArray = this.data.questionnaireArray;
    for (var i in tempArray[tempFatherIndex].content.options) {
      flag = false;
      for(var j in input.detail.value){
        if (tempArray[tempFatherIndex].content.options[i].name == input.detail.value[j]){
          flag = true;
        }
      }
      if(flag == true){
        tempArray[tempFatherIndex].content.options[i].isSelected = true;
      }
      else{
        tempArray[tempFatherIndex].content.options[i].isSelected = false;
      }
    }
    this.setData({
      questionnaireArray: tempArray,
    });
  }

  bindblurAnswerOfSAQ (input) {
    var tempIndex = input.currentTarget.dataset.id;
    var tempArray = this.data.questionnaireArray;
    tempArray[tempIndex].content.answer = input.detail.value;
    // console.log(tempArray[tempIndex].content);
    this.setData({
      questionnaireArray: tempArray,
    });
  }

  complete () {
    console.log(this.data.questionnaireArray);
  }
}
</script>

<style>
.arrow{
width: 10px;
height: 10px;
border-top: 2px solid #999;
border-right: 2px solid #999;
transform: rotate(-135deg);
margin-top:60rpx;
margin-left: 60rpx;
}

.backContent{
  margin-top:40rpx;
  margin-bottom: 20rpx;
}

#back{
  display: flex;
  flex-direction: row;
  border: 2px solid #999;
}

#title{
  display: flex;
  flex-direction: row;
  background-color: #E3E3E3;
  padding: 30rpx;
}

.titlePriceIcon{
  width: 60rpx;
  position: absolute;
  right: 120rpx;
}

.titleContent{
  margin-left: 50rpx;
}

.priceContent{
  position: absolute;
  right: 70rpx;
}

.priceUnit{
  position: absolute;
  right: 20rpx;
}

.SCQselectIcon{
  width: 60rpx;
}

.SCQOption{
  display: flex;
  flex-direction:column;
  margin-top: 20rpx;
}

.MCQselectIcon{
  width: 60rpx;
}
.SCQ{
  padding: 20rpx;
  border: 2rpx solid #999;
}
.SCQText{
  margin-left: 20rpx;
  /* color: #E3E3E3; */
  /* border: 2rpx solid #999; */
  width: 90%;
  word-break: keep-all;
  word-wrap: break-word;
}
.MCQ{
  padding: 20rpx;
  border: 2rpx solid #999;
}

.MCQText{
  margin-left: 20rpx;
  /* color: #E3E3E3; */
  /* border: 2rpx solid #999; */
  width: 90%;
  word-break: keep-all;
  word-wrap: break-word;
}

.SAQ{
  padding: 20rpx;
    border: 2rpx solid #999;
}

.SCQTitle{
  display: flex;
  flex-direction: row;
}

.MCQTitle{
  display: flex;
  flex-direction: row;
}

.SAQTitle{
  display: flex;
  flex-direction: row;
}

.MCQOption{
  display: flex;
  flex-direction: column;
  margin-top: 20rpx;
}

.SAQAnswer{
  border: 2px solid #999;
}

.SCQDiscription{
  /* border: 2rpx solid #999; */
  width: 90%;
  word-break: keep-all;
  word-wrap: break-word;
}

.MCQDiscription{
  /* border: 2rpx solid #999; */
  width: 90%;
  word-break: keep-all;
  word-wrap: break-word;
}

.SAQDiscription{
  /* border: 2rpx solid #999; */
  width: 90%;
  word-break: keep-all;
  word-wrap: break-word;
}

.SCQdeleteIcon{
  width: 80rpx;
  margin-left: 20rpx;
}

.MCQdeleteIcon{
  width: 80rpx;
  margin-left: 20rpx;
}

.SCQdeleteIcon1{
  width: 60rpx;
  margin-left: 20rpx;
}

.MCQdeleteIcon1{
  width: 60rpx;
  margin-left: 20rpx;
}

.SAQdeleteIcon{
  width: 60rpx;
  margin-left: 50rpx;
}

.SCQaddIcon1{
  width:60rpx;
  margin-left: 20rpx;
}

.MCQaddIcon1{
  width:60rpx;
  margin-left: 20rpx;
}

#body{
  margin-top: 100rpx;
}

.weui-btn{
  width: 50%;
  margin-bottom: 20rpx;
}
</style>