<template>
  <view class="page">
    <view class="page__bd">
      <view class="weui-cells__title">任务信息</view>
      <view class="weui-cells weui-cells_after-title">
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="label-front">任务标题</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" bindinput="bindTaskTitleInput"/>
          </view>
        </view>
        <view class="weui-cell weui-cell_select">
          <view class="weui-cell__hd weui-cell__hd_in-select-after">
            <view class="label-front">任务类型</view>
          </view>
          <view class="weui-cell__bd">
            <picker @change="bindTaskTypeChange" value="{{TaskTypeIndex}}" range="{{TaskTypes}}">
              <view class="weui-select weui-select_in-select-after">{{TaskTypes[TaskTypeIndex]}}</view>
            </picker>
          </view>
        </view>
        <view class="weui-cell weui-cell_select">
          <view class="weui-cell__hd weui-cell__hd_in-select-after">
            <view class="label-front">结束日期</view>
          </view>
          <view class="weui-cell__bd">
            <picker @change="bindDateChange" mode="date" value="{{endDate}}">
              <view class="weui-select weui-select_in-select-after">{{endDate}}</view>
            </picker>
          </view>
        </view>
        <view class="weui-cell weui-cell_select">
          <view class="weui-cell__hd weui-cell__hd_in-select-after">
            <view class="label-front">结束时间点</view>
          </view>
          <view class="weui-cell__bd">
            <picker @change="bindTimeChange" mode="time" value="{{endTime}}">
              <view class="weui-select weui-select_in-select-after">{{endTime}}</view>
            </picker>
          </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="label-front">酬金</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" type="number" bindinput="bindRewardInput"/>
          </view>
        </view>
        <view class="weui-cell weui-cell_input">
          <view class="weui-cell__hd">
            <view class="label-front">参与人数</view>
          </view>
          <view class="weui-cell__bd">
            <input class="weui-input" type="number" bindinput="bindLimitNumbersInput"/>
          </view>
        </view>
        <view class="task-content-container">
          <view class="task-content-label-front">任务描述</view>
          <view class="textarea-position">
            <textarea class="textarea-class" placeholder="请输入内容" placeholder-class="placeholder-class" bindinput="bindInputContent" name="content" value="{{content}}" maxlength="-1"/>
          </view>
        </view>
        <view class="task-content-container">
          <view class="task-content-label-front">图片说明</view>
          <view class="add-img-btn" bindtap="selectImg">
            <image class="add-img-btn-image" src="{{image_src}}" mode="scaleToFill"/>
          </view>
        </view>
      </view>
    </view>
    <view class="page__ft weui-btn-area">
      <button class="weui-btn" type="primary" bindtap="createTask" size="default">发布任务</button>
    </view>
  </view>
</template>
<script>
  import wepy from 'wepy'
  import {BASIC_REQUEST_URL, USER_LOGIN_INFO} from '../utils/constant'
  import {} from '../api'
  export default class CreateTask extends wepy.page {
    config = {
      navigationBarTitleText: '创建任务'
    }
    data = {
      openid: '',
      taskTitle: '',
      TaskTypeIndex: 0,
      TaskTypes: ['取快递', '其他'],
      endDate: '',
      endTime: '',
      reward: '',
      limit_num: '',
      content: '',
      tempFilePath: ''
    }
    bindTaskTitleInput(e) {
      this.taskTitle = e.detail.value
      console.log(this.taskTitle)
    }
    bindTaskTypeChange(e) {
      this.TaskTypeIndex = e.detail.value
    }
    bindDateChange(e) {
      this.endDate = e.detail.value
      console.log(this.endDate)
    }
    bindTimeChange(e) {
      this.endTime = e.detail.value
      console.log(this.endTime)
    }
    bindRewardInput(e) {
      this.reward = e.detail.value
      console.log(this.reward)
    }
    bindLimitNumbersInput(e) {
      this.limit_num = e.detail.value
      console.log(this.limit_num)
    }
    bindInputContent(e) {
      this.content = e.detail.value
      console.log(this.content)
    }
    async selectImg() {
      var that = this
      wx.chooseImage({
        count: 1,
        sizeType: ['original', 'compressed'],
        sourceType: ['album', 'camera'],
        success: function(res) {
          var tempFilePaths = res.tempFilePaths
          // that.setData({
          //   image_src: tempFilePaths
          // })
          that.tempFilePath = tempFilePaths
          wx.uploadFile({
            url: BASIC_REQUEST_URL + '/temp/upload/' + that.openid,
            filePath: that.tempFilePath[0],
            name: 'photo',
            success (res) {
              console.log(res)
              var datas = JSON.parse(res.data.replace(/'/g, '"'))
              console.log(datas)
              that.setData({
                image_src: datas.data.url
              })
              that.image_src = datas.data.url
            }
          })
        }
      })
    }
    createTask() {
      var that = this
      console.log(this.image_src)
      wx.uploadFile({
        url: BASIC_REQUEST_URL + '/tasks/create/',
        filePath: that.tempFilePath[0],
        name: 'photo',
        formData: {
          'openid': that.openid,
          'limit_time': that.endDate + ' ' + that.endTime + ':00',
          'limit_num': parseInt(that.limit_num),
          'title': that.taskTitle,
          'content': that.content,
          'tag': that.TaskTypes[that.TaskTypeIndex],
          'reward': parseInt(that.reward),
          'problem_content': ''
        },
        success (res) {
          console.log(res)
          var datas = JSON.parse(res.data.replace(/'/g, '"'))
          console.log(datas)
          wx.showToast({
            title: datas.data.msg,
            icon: 'success',
            duration: 2000
          })
          // 页面跳转
          that.onLoad()
        }
      })
    }
    onLoad() {
      var userLoginInfo = wepy.getStorageSync(USER_LOGIN_INFO)
      console.log(userLoginInfo.openid)
      this.openid = userLoginInfo.openid
      console.log(this.openid)
      this.setData({
        taskTitle: '',
        TaskTypeIndex: 0,
        endDate: '',
        endTime: '',
        reward: 0,
        limit_num: 0,
        content: '',
        image_src: '../images/add-picture.png'
      })
    }
}
</script>
<style lang="less">
.label-front{
  color:#495060;
  min-width:65px;
  padding-right:10px;
  font-size: 14px;
}
.i-input-position{
  padding-top: 0px;
}
.task-content-container{
    flex-flow:column nowrap;
    height: 130px; 
}
.task-content-label-front {
  color:#495060;
  min-width:65px;
  font-size:14px;
  margin-left:15px;
  margin-top:5px;
}
.textarea-position{
  padding-left: 15px;
  padding-top: 5px;
  height: 85%;
}
.textarea-class{
  font-size: 14px;
  height: 100%;
}
.placehoder-class{
  font-size:14px;
}
.add-img-btn{
  width: 85px;
  height: 85px;
  padding-left: 15px;
  padding-top: 5px;
}
.add-img-btn-image{
  width: 80px;
  height: 80px;
  border: 1px solid gray;
  border-radius: 5%;
}
</style>
<style lang="less" scoped>
.weui-select {
  font-size: 14px;
}
</style>
